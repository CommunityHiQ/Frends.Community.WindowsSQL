name: BuildAndTestOnEveryPush.yml

on:
  push:
    branches-ignore:
      - main

jobs:
  build:
    name: Build on ubuntu
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: set up docker
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Salakala123!" -p 1433:1433 --name sql1 --hostname sql1 -d mcr.microsoft.com/mssql/server:2019-CU18-ubuntu-20.04

    - name: Build
      run: dotnet build
    
    - name: Test
      run: dotnet test --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:Threshold=100

    - name: Quality Gate - Test coverage shall be above threshold
      env:
          TESTCOVERAGE_THRESHOLD: 0
      run: |
            echo "Quality Gate: checking test coverage is above threshold ..."
            echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
                echo "OK"
            else
                echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
                echo "Failed"
                exit 1
            fi
      
    - name: Pack release version of task
      run: dotnet pack --configuration Release --include-source
      
    - name: Push NuGet package to the testfeed
      run: dotnet nuget push Frends.Community.WindowsSQL/bin/Release/Frends.Community.WindowsSQL.*.nupkg  --api-key ${{ secrets.COMMUNITY_FEED_API_KEY }} --source https://www.myget.org/F/frends-community-test/api/v2/package